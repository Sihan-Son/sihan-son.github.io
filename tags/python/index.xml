<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Sihan`s Blog</title>
    <link>https://sihan-son.github.io/tags/python/</link>
    <description>Recent content in python on Sihan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 28 Feb 2025 07:49:58 +0900</lastBuildDate><atom:link href="https://sihan-son.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>그로킹 알고리즘</title>
      <link>https://sihan-son.github.io/book/grokking_algorithm/</link>
      <pubDate>Fri, 28 Feb 2025 07:49:58 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/grokking_algorithm/</guid>
      <description>한빛미디어 서평단 &amp;lt;나는리뷰어다&amp;gt; 활동을 위해서 책을 협찬 받아 작성된 서평입니다.
유튜브, 넥플릭스 등 개인 맞춤화 된 추천 시스템이 보편화 되면서 알고리즘이라는 용어가 흔하게 사용하고 있습니다. 프로그래밍에서 알고리즘은 분리될 수 없는 관계이자 점점 깊어지는 관계입니다. 컴퓨터를 전공하게 되면 자료구조부터 여러과목을 통해 알고리즘에 대한 개념을 익혀가게 됩니다.
그로킹 알고리즘은 알고리즘 문제 풀이를 위한 깊은 구현이나 응용을 이야기하는 책은 아닙니다. 알고리즘이라는 세계를 그림으로 소개해주는 책에 가깝습니다. 알고리즘에 있어 가장 기본인 시간 복잡도부터 NP-완전문제까지 다루고 있습니다.</description>
    </item>
    
    <item>
      <title>Fast Api로 배우는 백엔드 프로그래밍 with 클린 아키텍쳐</title>
      <link>https://sihan-son.github.io/book/fast-api/</link>
      <pubDate>Mon, 21 Oct 2024 23:49:10 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/fast-api/</guid>
      <description>python 기반 웹 프레임워크라고 하면 대부분 django나 flask 정도를 많이 사용하고 자료 찾기도 용이합니다. 두 프레임워크 모두 풀 스택 프레임워크라서 rest api 서버를 구축하기 위해선 별도의 추가 라이브러리가 필요하고 추가적인 학습이 필요합니다. 아직 1 버전이 나오진 않았지만 fastapi는 이런 문제들을 일부 해결하는 동시에 속도까지 빠른 프레임워크입니다. 프레임워크들은 각자 만들어진 목적과 철학이 다르기 때문에 동일 선상에서 1대 1 비교는 쉽지 않습니다. 그래서 단순 우열을 가리기보다는 내 필요에 맞는 프레임워크가 뭔지를 고민하는게 좋다고 생각합니다.</description>
    </item>
    
    <item>
      <title>개발자를 위한 실전 선형대수학</title>
      <link>https://sihan-son.github.io/book/programmer_lin_algebra/</link>
      <pubDate>Sun, 29 Oct 2023 23:31:45 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/programmer_lin_algebra/</guid>
      <description>다양한 선형대수학 책이 나와있고, 프로그래머들을 타겟으로 하는 책, 수식을 최소화하는 책 등 다양한 종류의 책이 있습니다. 16년도 알파고와 함께 나오기 시작한 책들은 대부분 이미 선형대수에 익숙한 사람을을 대상으로 프로그래밍에 특히, 인공지능 분야에 선형대수를 어떻게 적용시킬지 설명하는 책에 가까웠습니다. 선형대수가 가지고 있는 기하학적 특성과 적용시 벡터 공간에서 변화과 주요한 내용이었습니다. 그 후에는 수학적 기반이 약한 프로그래머를 위해서 수식을 최소화하고 설명과 코드만으로 쓰여진 책들이 나왔습니다. 두 종류 모두 각기의 장점을 가지고 있었지만 수학적 베이스는 약하지만 수학그 자체로 좀더 이해하면서 코드로 옮기고 싶었던 저에게는 아쉬웠습니다.</description>
    </item>
    
    <item>
      <title>어쩌다 데이터 분석 with 파이썬, 입문의 왕도</title>
      <link>https://sihan-son.github.io/book/anyway_data_analytics/</link>
      <pubDate>Sun, 26 Mar 2023 09:21:45 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/anyway_data_analytics/</guid>
      <description>chatGPT가 AlphaGo 이후로 다시 한 번 대중의 관심을 인공지능으로 가지고 왔습니다. prompt engineer라는 용어가 나오고 중고생들부터 학계까지 광범위하게 사용하는 도구가 되었습니다. 이런 흐름 속에 입문을 고민하면서 어쩌다 데이터 분석 with 파이썬을 찾고 계실 것 같습니다.
데이터 과학이라는 큰 범주 내에서는 가까운 사이라고 생각할 수 있지만 AI의 ML/DL(머신러닝/딥러닝)에서 필요로 하는 능력과 데이터 분석은 다소 궤가 다르다고 봐야랍니다. DL을 위해서도 데이터를 분석하고 정제하는 능력이 필요하기 때문에 DL 공부를 염두에 두셔도 볼 만한 책입니다.</description>
    </item>
    
    <item>
      <title>Must Have 텐초의 파이토치 딥러닝 특강</title>
      <link>https://sihan-son.github.io/book/pytorch_rabbit/</link>
      <pubDate>Mon, 31 Oct 2022 22:03:08 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/pytorch_rabbit/</guid>
      <description>골든래빗 출판사로부터 책을 제공받아 작성했습니다
책 바로가기
알파고가 가지고 온 인고지능 쇼크 이후 벌써 6년이라는 시간이 지났습니다. 그 기간동안 다양한 인공지능/딥러닝 관련 서적들이 나왔고, tenosrflow와 pytorch가 인공지능 프레임워크의 두 기둥으로 자리 잡았습니다. 다양한 프레임워크와 네트워크/모델들이 나왔고 그래서 상대적으로 초창기에 나온 책들은 기초적인 MLP, CNN, RNN 정도를 다루고 부록에 GAN, Transformer 등 나름 트랜디하게 뒤에 나온 모델들을 소개하는 정도였습니다. 이번 책은 퍼셉트론을 시작으로 GPT, ViT등 요즘 핫하다고 할 수 있는 대규모 모델 등까지 다루고 있습니다.</description>
    </item>
    
    <item>
      <title>Jupyter Kernel 추가하기</title>
      <link>https://sihan-son.github.io/python/jupyter-kernel/</link>
      <pubDate>Sat, 29 Oct 2022 10:00:41 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/python/jupyter-kernel/</guid>
      <description>파이썬을 이용하다보면 프로젝트마다 필요한 라이브러리들이 다르고 파이썬의 버전도 다른경우가 대부분입니다. 그래서 다양한 가상환경 세팅을 위한 라이브러리들과 환경들이 존재합니다. 제목처럼 Anaconda에서 가상환경을 만들고 jupyter에 커널을 연결하는 방법을 소개드리겠습니다.
1. 환경만들기 conda create -n [env name] [python=ver] Anaconda Prompt에서 위와 같이 입력을 하시면 가상환경이 만들어집니다. 환경변수를 설정해놓으셨다면 윈도우 기준 꼭 Anaconda Prompt가 아니어도 CMD 등 에서도 가능합니다.
[env name] 옵션은 여러분이 만든 가상환경에 붙는 이름입니다. [python=ver]은 필요할 경우 기입하시면 됩니다. 특정 파이썬 버전이 필요하시면 해당 버전을 기입하시면 됩니다.</description>
    </item>
    
    <item>
      <title>데싸노트의 실전에서 통하는 머신러닝, 머신러닝의 Cheat Sheet </title>
      <link>https://sihan-son.github.io/book/data_science_note_ml/</link>
      <pubDate>Wed, 07 Sep 2022 23:14:54 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/data_science_note_ml/</guid>
      <description>골든래빗 출판사로부터 책을 제공받아 작성했습니다
책 바로가기
데싸노트의 실전에서 통하는 머신러닝을 선택하기 전에 반드시 아셔야 할 내용이 하나 있습니다. 머신러닝과 딥러닝은 다른 것입니다. 입문 단계에서 가장 많이 헷갈리고 혼용하는 것이 용어입니다. 동일 카테고리에서 특히 많은 혼동이 있는 듯 합니다. 이제는 조금 옛날 이야기가 되어버렸지만 새롭게 인공지능의 붐을 일으킨 알파고 이후 인공지능 == 머신러닝 == 딥러닝으로 알고 있는 사람이 많아져 더욱 용어에 혼란을 느끼는 사람이 많은 듯 합니다. 그래서 이 책은 제목 그대로 머신러닝만을 다루고 있습니다.</description>
    </item>
    
    <item>
      <title>똑똑한 코드 작성을 위한 실전 알고리즘, -파이썬으로 시작하는 알고리즘 세상-</title>
      <link>https://sihan-son.github.io/book/python-algorithm/</link>
      <pubDate>Sun, 26 Jun 2022 11:28:55 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/python-algorithm/</guid>
      <description>전공을 시작 할 때만해도 파이썬은 알고리즘 공부나 대회 준비에 적합하지 않다는 인식이 강했습니다. 제가 가지고 있는 다른 알고리즘 서적들만 해도 C와 cpp가 각 2권씩입니다. 자료구조나 파이썬의 신텍스 슈가 등 때문에 파이썬 자료구조와 알고리즘 책을 시장에서 거의 찾아볼 수 없었습니다.
책이 한 장 한 장 넘어가면서 파이썬이 알고리즘 공부에 별로라는 생각은 편견이라는 걸 다시 느꼈다. 알고리즘에서 중요한 점은 문제 풀이를 위한 논리적인 사고 과정과 사고 과정을 코드로 옮기는 과정이지 구현하는 언어의 문제가 아니었다.</description>
    </item>
    
    <item>
      <title>연구자, 실무자 모두를 위한 머신러닝 도서 -머신러닝 파워드 애플리케이션 -</title>
      <link>https://sihan-son.github.io/book/ml_app/</link>
      <pubDate>Sat, 26 Mar 2022 22:50:56 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/ml_app/</guid>
      <description>작년에 출간 소식을 접했을 땐 막연히 박해선 역자님의 신간이 출시 되었네 한 번 읽어봐야겠다라고 생각했던 책이었습니다. 출간 이벤트 때 책과 연이 닿지 않았고, 당장 필요한 책은 아니어서 찜 목록에 잠들어 있었습니다. 3월 리뷰 도서 리스트에서 다시 만났을 때도 제목만 보고 뭐 서빙 도구들을 연결하고, 연구와는 다른 접근법이 필요하다 정도의 상투적인 내용이지 않을까 지레짐작하며 희망 도서 3권 중 한 권으로 선택했습니다. 택배 파업으로 다소 늦게 선정 된 도서를 받았고, 책을 머릿말과 베타리더들의 추천사를 읽으면서 내가 짧은 식견으로 책을 섣불리 판단하고 만나지 못 할 뻔 한것을 깨달았습니다.</description>
    </item>
    
    <item>
      <title>이것이 데이터 분석이다 With Python</title>
      <link>https://sihan-son.github.io/book/data-analysis-with-python/</link>
      <pubDate>Sun, 18 Apr 2021 19:21:31 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/book/data-analysis-with-python/</guid>
      <description>이번달 리뷰 할 책은 이것이 데이터 분석이다 With Python입니다!
저자가 소개하는 것처럼 이론이 아니라 데이터 분석의 흐름을 다루고 있는 책입니다. 프로그래밍을 어느 정도 해봤고, 새로운 경험을 원하시는 분들이 한 번쯤은 조우해도 괜찮은 책입니다.
많은 데이터 분석, ML/DL 책에서 다루는 numpy, pandas, matplotlib를 이 책에서도 다루고 있습니다. 자세한 사용법이 아니라 어떠한 흐름으로 사용을 해야하고 어떤 느낌으로 사용해야 하는지 실생활에서 만나는 데이터를 가지고 생동감있게 다가 옵니다.
이 책에서 가장 중요한 점은 이론이 아니라 흐름을 다루고 있다는 것 입니다.</description>
    </item>
    
    <item>
      <title>Do it! 점프 투 장고</title>
      <link>https://sihan-son.github.io/book/do-it-django/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/book/do-it-django/</guid>
      <description>지난 달에 리뷰한 점프 투 플라스크와 형제로 나온 책입니다. Python을 공부하다보면 언젠가 마주치는 이름입니다.
이제는 웹은 우리와 떨어질 수 없는 존재가 되어버렸습니다. 개발을 하다보면 아무리 피해가려고 해도 중간중간 만날 수 밖에 없는 누군가에겐 애증의 존재가 되어버린 웹입니다. Django는 웹을 위한 대부분의 것을 다 준비해준 일명 Macro Framework입니다. 최소한의 기능만을 제공하는 Flask와는 정 반대의 느낌을 가지고 있는 프레임워크입니다.
다른 웹 프레임워크를 다루다가 Django를 만나면 조금은 당황 할 수도 있는게 데이터베이스를 정의하는 Model을 기준으로 프로젝트 돌아가서 웹으로 Django를 배운다는 느낌보다 Django를 위한 Django를 배운다는 느낌이 강하게 들 수 있습니다.</description>
    </item>
    
    <item>
      <title>Do it! 점프 투 플라스크</title>
      <link>https://sihan-son.github.io/book/do-it-flask/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/book/do-it-flask/</guid>
      <description>python은 분명 쉽고 간결한 언어이다. 간결한 만큼 강력하고 확장성이 좋은 언어이다. 기초가 간결하다고 해서 본격적으로 사용하기 위한 코드가 쉽다는 의미는 아니다. 오히려 본격적으로 사용하기 위해선 다양한 라이브러리들을 얼마나 유기적으로 사용하느냐가 python을 잘 다룬다고 할 수 있을 것이다.
웹 프로그래밍은 점점 개발자에게 요구되는 기본적인 기술요소가 되어가고 있는 듯 하다. 웹은 우리의 코드에게 UI를 선물하기 좋은 방법입니다. UI를 선물하기 위해선 몇 가지 거쳐야할 단계가 있습니다. flask는 우리의 선물 포장지를 만들어 python Web Framework입니다.</description>
    </item>
    
    <item>
      <title>쉽게 따라하는 Colab과 구글 드라이브 연결</title>
      <link>https://sihan-son.github.io/setting/colab-setting/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/setting/colab-setting/</guid>
      <description>오늘 포스팅은 그림이 무척 많은 Colab을 사용하는 방법부터 Colab에서 구글 드라이브를 저장소로 사용하는 방법입니다. 차근차근 따라와 주세요.
먼저 구글 드라이브에 들어가주세요. 저장소로 쓰기 때문에 어느 정도 용량확보가 필요합니다. 그래서 기존 구글 계정의 용량이 모자른다면 새로운 구글 계정을 만드셔서 하시는 것을 추천합니다.
Index Colab 추가하기 Colab 시작하기 GPU 사용하기 Google Drive 연결하기 1. Colab 추가하기 구글 드라이브의 메인 화면에서 마우스 우클릭을 해주시면 위와 같은 이미지가 뜨게 됩니다. 저는 이미 Colab을 추가한 상태라 항목에 Colab이 보이지만 이 글을 보고 계신 대부분의 사용자 분들은 없는게 정상이니 걱정하지 마세요.</description>
    </item>
    
    <item>
      <title>쉽게 따라하는 Pycharm interpreter 설정</title>
      <link>https://sihan-son.github.io/setting/pycharm-setting/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/setting/pycharm-setting/</guid>
      <description>오늘 알아볼 내용은 Pycharm에서 Python interpreter설정입니다. 잘나온 Python IDE가 여러가지라 취향에 따라서 Jupyter, vscode, spyder 등등 여러가지 사용하고 계실겁니다. 이 글은 그중에서 Pycharm 사용하시려는 분 중에서 interpreter설정에서 문제를 격고 계신 분들을 위한 포스팅입니다.
1. 기본 interpreter 설정하기! fig 1
interpreter 설정을 위해서 파란색으로 하이라이트 되어 있는 setting을 눌러줍니다.
fig 2
fig 3
이제 fig 2이미지에서 좌측 메뉴의 Project Interpreter를 들어가면 처음이시면 fig 2처럼 빈 화면이 뜨게 됩니다. 이제 우측 상단의 빨간 동그라미 표시된 톱니 바퀴를 누르게 되면 fig 3과 같이 Add와 Show all이 나옵니다.</description>
    </item>
    
  </channel>
</rss>
